// Code generated by MockGen. DO NOT EDIT.
// Source: top-down-tdd/user-input (interfaces: TerminalUtil)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTerminalUtil is a mock of TerminalUtil interface.
type MockTerminalUtil struct {
	ctrl     *gomock.Controller
	recorder *MockTerminalUtilMockRecorder
}

// MockTerminalUtilMockRecorder is the mock recorder for MockTerminalUtil.
type MockTerminalUtilMockRecorder struct {
	mock *MockTerminalUtil
}

// NewMockTerminalUtil creates a new mock instance.
func NewMockTerminalUtil(ctrl *gomock.Controller) *MockTerminalUtil {
	mock := &MockTerminalUtil{ctrl: ctrl}
	mock.recorder = &MockTerminalUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTerminalUtil) EXPECT() *MockTerminalUtilMockRecorder {
	return m.recorder
}

// GetInput mocks base method.
func (m *MockTerminalUtil) GetInput(arg0 *string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInput", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInput indicates an expected call of GetInput.
func (mr *MockTerminalUtilMockRecorder) GetInput(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInput", reflect.TypeOf((*MockTerminalUtil)(nil).GetInput), arg0)
}
