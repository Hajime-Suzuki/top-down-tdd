// Code generated by MockGen. DO NOT EDIT.
// Source: board.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBoard is a mock of Board interface.
type MockBoard struct {
	ctrl     *gomock.Controller
	recorder *MockBoardMockRecorder
}

// MockBoardMockRecorder is the mock recorder for MockBoard.
type MockBoardMockRecorder struct {
	mock *MockBoard
}

// NewMockBoard creates a new mock instance.
func NewMockBoard(ctrl *gomock.Controller) *MockBoard {
	mock := &MockBoard{ctrl: ctrl}
	mock.recorder = &MockBoardMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBoard) EXPECT() *MockBoardMockRecorder {
	return m.recorder
}

// HasWinner mocks base method.
func (m *MockBoard) HasWinner() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasWinner")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasWinner indicates an expected call of HasWinner.
func (mr *MockBoardMockRecorder) HasWinner() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasWinner", reflect.TypeOf((*MockBoard)(nil).HasWinner))
}
