// Code generated by MockGen. DO NOT EDIT.
// Source: top-down-tdd/abstractions (interfaces: Game)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGame is a mock of Game interface.
type MockGame struct {
	ctrl     *gomock.Controller
	recorder *MockGameMockRecorder
}

// MockGameMockRecorder is the mock recorder for MockGame.
type MockGameMockRecorder struct {
	mock *MockGame
}

// NewMockGame creates a new mock instance.
func NewMockGame(ctrl *gomock.Controller) *MockGame {
	mock := &MockGame{ctrl: ctrl}
	mock.recorder = &MockGameMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGame) EXPECT() *MockGameMockRecorder {
	return m.recorder
}

// InitGame mocks base method.
func (m *MockGame) InitGame() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitGame")
}

// InitGame indicates an expected call of InitGame.
func (mr *MockGameMockRecorder) InitGame() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitGame", reflect.TypeOf((*MockGame)(nil).InitGame))
}

// IsOver mocks base method.
func (m *MockGame) IsOver() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsOver")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsOver indicates an expected call of IsOver.
func (mr *MockGameMockRecorder) IsOver() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsOver", reflect.TypeOf((*MockGame)(nil).IsOver))
}

// SetMark mocks base method.
func (m *MockGame) SetMark() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMark")
}

// SetMark indicates an expected call of SetMark.
func (mr *MockGameMockRecorder) SetMark() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMark", reflect.TypeOf((*MockGame)(nil).SetMark))
}

// ShowBoard mocks base method.
func (m *MockGame) ShowBoard() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ShowBoard")
}

// ShowBoard indicates an expected call of ShowBoard.
func (mr *MockGameMockRecorder) ShowBoard() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowBoard", reflect.TypeOf((*MockGame)(nil).ShowBoard))
}

// ShowResultMessage mocks base method.
func (m *MockGame) ShowResultMessage() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ShowResultMessage")
}

// ShowResultMessage indicates an expected call of ShowResultMessage.
func (mr *MockGameMockRecorder) ShowResultMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowResultMessage", reflect.TypeOf((*MockGame)(nil).ShowResultMessage))
}
