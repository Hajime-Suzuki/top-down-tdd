// Code generated by MockGen. DO NOT EDIT.
// Source: top-down-tdd/abstractions (interfaces: Presenter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	abstractions "top-down-tdd/abstractions"

	gomock "github.com/golang/mock/gomock"
)

// MockPresenter is a mock of Presenter interface.
type MockPresenter struct {
	ctrl     *gomock.Controller
	recorder *MockPresenterMockRecorder
}

// MockPresenterMockRecorder is the mock recorder for MockPresenter.
type MockPresenterMockRecorder struct {
	mock *MockPresenter
}

// NewMockPresenter creates a new mock instance.
func NewMockPresenter(ctrl *gomock.Controller) *MockPresenter {
	mock := &MockPresenter{ctrl: ctrl}
	mock.recorder = &MockPresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPresenter) EXPECT() *MockPresenterMockRecorder {
	return m.recorder
}

// ShowBoard mocks base method.
func (m *MockPresenter) ShowBoard(arg0 abstractions.Board) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowBoard", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// ShowBoard indicates an expected call of ShowBoard.
func (mr *MockPresenterMockRecorder) ShowBoard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowBoard", reflect.TypeOf((*MockPresenter)(nil).ShowBoard), arg0)
}

// ShowMessage mocks base method.
func (m *MockPresenter) ShowMessage(arg0 abstractions.User) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowMessage", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// ShowMessage indicates an expected call of ShowMessage.
func (mr *MockPresenterMockRecorder) ShowMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowMessage", reflect.TypeOf((*MockPresenter)(nil).ShowMessage), arg0)
}
